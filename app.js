function budgetService(e,t,n){var o=[],r=[],u=function(){return 0!=o.length?e.when(o):t.getAllBudgets().then(function(e){return o=e})},i=function(e){t.saveBudget(e).then(function(e){o.push(e)},function(e){console.log(e)})},c=function(){return 0!=r.length?e.when(r):t.getAllBudgetItems().then(function(e){return r=e})},s=function(e){t.saveBudgetItem(e).then(function(e){r.push(e)},function(e){console.log(e)})},l=function(e){return r.reduce(function(t,n){return n.budgetId==e.id?t+n.amount:t},0)},a=function(e){return e.percentAllotment/100*n.total("net")},g=function(e){return l(e)/n.total("net")*100},d=function(e){return a(e)-l(e)},f=function(){return o.reduce(function(e,t){return e+t.percentAllotment},0)},m=function(){var e=n.total("gross"),t=n.total("net");return(e-t)/e},h=function(){return o.reduce(function(e,t){return e+g(t)},m())};this.getAllBudgets=u,this.saveBudget=i,this.getAllBudgetItems=c,this.saveBudgetItem=s,this.total=l,this.budgetCap=a,this.budgetUtilization=g,this.budgetBalance=d,this.guidelineTotal=f,this.taxUtilization=m,this.overviewUtilizationTotal=h}function deploydService(e,t,n){var o=function(){var o=t.defer();return e.get(n+"/budgets").success(function(e){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise},r=function(o){var r=t.defer();return e.post(n+"/budgets",{name:o.name,percentAllotment:o.percent}).success(function(e){r.resolve(e)}).error(function(e){r.reject(e)}),r.promise},u=function(){var o=t.defer();return e.get(n+"/budget-items").success(function(e){o.resolve(e)}).error(function(e){console.log(e)}),o.promise},i=function(o){var r=t.defer();return e.post(n+"/budget-items",{name:o.name,amount:o.amount,budgetId:o.budget.id}).success(function(e){r.resolve(e)}).error(function(e){r.reject(e)}),r.promise},c=function(){var o=t.defer();return e.get(n+"/income-sources").success(function(e){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise},s=function(o){var r=t.defer();return e.post(n+"/income-sources",{job:o.job,incomeTypeId:o.incomeType.id,payrate:o.payrate,hours:o.hours,taxPercent:o.taxPercent}).success(function(e){r.resolve(e)}).error(function(e){r.reject(e)}),r.promise},l=function(){var o=t.defer();return e.get(n+"/income-types").success(function(e){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise},a=function(o){var r=t.defer();return e.get(n+"/income-types?id="+o).success(function(e){r.resolve(type)}).error(function(e){console.log(e)}),r.promise};this.getAllBudgets=o,this.saveBudget=r,this.getAllBudgetItems=u,this.saveBudgetItem=i,this.getAllIncomes=c,this.saveIncome=s,this.getAllIncomeTypes=l,this.getIncomeType=a}function normalizeIncomes(e){angular.isArray(e)||(e=[e]);var t=[];return angular.forEach(e,function(e){var n={};n.job=e.job,n.payrate=e.payrate,n.hours=e.hours,n.gross=e.payrate*e.hours*4,n.tax=e.taxPercent,n.net=n.gross*(1-e.taxPercent/100),n.biweekly=n.net/2,t.push(n)}),t}function getHours(e){switch(e){case"Weekly":case"Bi-Weekly":case"Yearly":return 40;case"Semi-Monthly":case"Monthly":return 520/12}}function getAdjustedPayrate(e,t){switch(t){case"Weekly":return e;case"Bi-Weekly":return e/80;case"Semi-Monthly":return e/(520/6);case"Monthly":return e/(520/3);case"Yearly":return e/2080}}function incomeService(e,t){var n=[],o=[],r=function(){return 0!=n.length?e.when(n):t.getAllIncomes().then(function(e){return n=normalizeIncomes(e)})},u=function(e){e.payrate=getAdjustedPayrate(e.payrate,e.incomeType.name),e.hours=e.hours?e.hours:getHours(e.incomeType.name),t.saveIncome(e).then(function(e){n.push(self.normalizeIncomes(e)[0])},function(e){console.log(e)})},i=function(){return 0!=o?e.when(types):t.getAllIncomeTypes().then(function(e){return o=e})},c=function(e){return t.getType(e).then(function(e){return e})},s=function(e){return n.length>0&&isFinite(n[0][e])?n.reduce(function(t,n){return t+n[e]},0):void 0},l=function(e){return 13*e.gross},a=function(e){return 13*e.net},g=function(){return n.reduce(function(e,t){return e+l(t)},0)},d=function(){return n.reduce(function(e,t){return e+a(t)},0)};this.getAllIncomes=r,this.saveIncome=u,this.getAllIncomeTypes=i,this.getIncomeType=c,this.yearlyGross=l,this.totalYearlyGross=g,this.yearlyNet=a,this.totalYearlyNet=d,this.total=s}angular.module("budgettingIsFun",["angular.filter"]).controller("BaseController",["$scope",function(e){e.welcomeMessage="Welcome Savy Budgetter"}]),angular.module("customFilters",[]).filter("unique",function(){return function(e,t){if(angular.isArray(e)&&angular.isString(t)){for(var n=[],o={},r=0;r<e.length;r++){var u=e[r][t];angular.isUndefined(o[u])&&(o[u]=!0,n.push(e[r]))}return console.log(n),n}return e}}),angular.module("budgettingIsFun").controller("BudgetController",["budgetService","incomeService",function(e,t){var n=this;n.budgets=[],n.budgetItems=[],n.budgetCap=e.budgetCap,n.budgetUtilization=e.budgetUtilization,n.budgetBalance=e.budgetBalance,n.guidelineTotal=e.guidelineTotal,n.taxUtilization=e.taxUtilization,n.overviewUtilizationTotal=e.overviewUtilizationTotal,e.getAllBudgets().then(function(t){n.budgets=t,e.getAllBudgetItems().then(function(e){n.budgetItems=e},function(e){console.log(e)})},function(e){console.log(e)}),n.newBudget={},n.saveBudget=function(t){e.saveBudget(t),n.newBudget={}},n.newBudgetItem={},n.saveBudgetItem=function(t){e.saveBudgetItem(t),n.newBudgetItem={}},n.total=e.total}]),angular.module("budgettingIsFun").service("budgetService",["$q","deploydService","incomeService",budgetService]),angular.module("budgettingIsFun").constant("deployd","http://localhost:2403").service("deploydService",["$http","$q","deployd",deploydService]),angular.module("budgettingIsFun").controller("IncomeController",["incomeService",function(e){var t=this;t.incomes=[],t.incomeTypes=[],t.totalYearlyGross=e.totalYearlyGross,t.totalYearlyNet=e.totalYearlyNet,e.getAllIncomes().then(function(e){t.incomes=e},function(e){console.log(e)}),e.getAllIncomeTypes().then(function(e){t.incomeTypes=e},function(e){console.log(e)}),t.newIncome={},t.saveIncome=function(n){e.saveIncome(n),t.newIncome={}},t.total=e.total}]),angular.module("budgettingIsFun").service("incomeService",["$q","deploydService",incomeService]);
//# sourceMappingURL=data:application/json;base64,
