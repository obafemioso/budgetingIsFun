function budgetService(e,n){var t=[],o=function(){return 0!=t.length?e.when(t):n.getAllBudgets().then(function(e){return t=e})},r=function(e){n.saveBudget(e).then(function(e){t.push(e)},function(e){console.log(e)})};this.getAllBudgets=o,this.saveBudget=r}function deploydService(e,n,t){var o=function(){var o=n.defer();return e.get(t+"/budgets").success(function(e){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise},r=function(o){var r=n.defer();return e.post(t+"/budgets",{name:o.name,percentAllotment:o.percent}).success(function(e){r.resolve(e)}).error(function(e){r.reject(e)}),r.promise},u=function(){var o=n.defer();return e.get(t+"/income-sources").success(function(e){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise},c=function(o){var r=n.defer();return e.post(t+"/income-sources",{job:o.job,incomeType:o.type.id,payrate:o.payrate,hours:o.hours,taxPercent:o.taxPercent}).success(function(e){r.resolve(e)}).error(function(e){r.reject(e)}),r.promise},s=function(){var o=n.defer();return e.get(t+"/income-types").success(function(e){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise},i=function(o){var r=n.defer();return e.get(t+"/income-types?id="+o).success(function(e){r.resolve(e)}).error(function(e){console.log(e)}),r.promise};this.getAllBudgets=o,this.saveBudget=r,this.getAllIncomes=u,this.saveIncome=c,this.getAllTypes=s,this.getType=i}function normalizeIncomes(e){angular.isArray(e)||(e=[e]);var n=[];return angular.forEach(e,function(e){var t={};t.job=e.job,t.payrate=e.payrate,t.hours=e.hours,t.gross=e.payrate*e.hours*4,t.tax=e.taxPercent,t.net=t.gross*(1-e.taxPercent/100),t.biweekly=t.net/2,n.push(t)}),n}function getHours(e){switch(e){case"Weekly":case"Bi-Weekly":case"Yearly":return 40;case"Semi-Monthly":case"Monthly":return 520/12}}function getAdjustedPayrate(e,n){switch(n){case"Weekly":return e;case"Bi-Weekly":return e/80;case"Semi-Monthly":return e/(520/6);case"Monthly":return e/(520/3);case"Yearly":return e/2080}}function incomeService(e,n){var t=[],o=[],r=function(){return 0!=t.length?e.when(t):n.getAllIncomes().then(function(e){return t=normalizeIncomes(e)})},u=function(e){e.payrate=getAdjustedPayrate(e.payrate,e.type.name),e.hours=e.hours?e.hours:getHours(e.type.name),n.saveIncome(e).then(function(n){t.push(self.normalizeIncomes(e)[0])},function(e){console.log(e)})},c=function(){return 0!=o?e.when(o):n.getAllTypes().then(function(e){return o=e})},s=function(e){return n.getType(e).then(function(e){return e})};this.getAllIncomes=r,this.saveIncome=u,this.getAllTypes=c,this.getType=s}angular.module("budgettingIsFun",["angular.filter"]).controller("BaseController",["$scope",function(e){e.welcomeMessage="Welcome Savy Budgetter"}]),angular.module("customFilters",[]).filter("unique",function(){return function(e,n){if(angular.isArray(e)&&angular.isString(n)){for(var t=[],o={},r=0;r<e.length;r++){var u=e[r][n];angular.isUndefined(o[u])&&(o[u]=!0,t.push(e[r]))}return console.log(t),t}return e}}),angular.module("budgettingIsFun").constant("deployd","http://localhost:2403").controller("BudgetController",["$http","deployd","budgetService",function(e,n,t){var o=this;o.budgets,o.items=[],t.getAllBudgets().then(function(e){o.budgets=e},function(e){console.log(e)}),o.newBudget={},o.saveBudget=function(e){t.saveBudget(e),o.newBudget={}},o.newItem={},o.addItem=function(t){e.post(n+"/budget-items",{name:t.name,amount:t.amount,budgetId:t.budgetId}).success(function(e){o.newItem={},o.items.push(e)}).error(function(e){console.log(e)})},o.total=function(e){var n=0;return angular.forEach(o.items,function(t){t.budgetId==e&&(n+=t.amount)}),n}}]),angular.module("budgettingIsFun").service("budgetService",["$q","deploydService",budgetService]),angular.module("budgettingIsFun").constant("deployd","http://localhost:2403").service("deploydService",["$http","$q","deployd",deploydService]),angular.module("budgettingIsFun").controller("IncomeController",["incomeService",function(e){var n=this;n.incomes,n.types,e.getAllIncomes().then(function(e){n.incomes=e},function(e){console.log(e)}),e.getAllTypes().then(function(e){n.types=e},function(e){console.log(e)}),n.newIncome,n.saveIncome=function(t){e.saveIncome(t),n.newIncome={}}}]),angular.module("budgettingIsFun").service("incomeService",["$q","deploydService",incomeService]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvYnVkZ2V0L2J1ZGdldFNlcnZpY2UuanMiLCJjb21wb25lbnRzL2RlcGxveWQvZGVwbG95ZFNlcnZpY2UuanMiLCJjb21wb25lbnRzL2luY29tZS9pbmNvbWVTZXJ2aWNlLmpzIiwiYXBwLm1vZHVsZS5qcyIsImZpbHRlcnMvY3VzdG9tRmlsdGVycy5qcyIsImNvbXBvbmVudHMvYnVkZ2V0L2J1ZGdldENvbnRyb2xsZXIuanMiLCJjb21wb25lbnRzL2luY29tZS9pbmNvbWVDb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbImJ1ZGdldFNlcnZpY2UiLCIkcSIsImRlcGxveWRTZXJ2aWNlIiwiYnVkZ2V0cyIsImdldEFsbEJ1ZGdldHMiLCJsZW5ndGgiLCJ3aGVuIiwidGhlbiIsImFsbEJ1ZGdldHMiLCJzYXZlQnVkZ2V0IiwibmV3QnVkZ2V0IiwiYnVkZ2V0IiwicHVzaCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJ0aGlzIiwiJGh0dHAiLCJkZXBsb3lkIiwiZGVmZXJyZWQiLCJkZWZlciIsImdldCIsInN1Y2Nlc3MiLCJyZXNvbHZlIiwiZXJyb3IiLCJyZWplY3QiLCJwcm9taXNlIiwicG9zdCIsIm5hbWUiLCJwZXJjZW50QWxsb3RtZW50IiwicGVyY2VudCIsImluY29tZXMiLCJzYXZlSW5jb21lIiwibmV3SW5jb21lIiwiam9iIiwiaW5jb21lVHlwZSIsInR5cGUiLCJpZCIsInBheXJhdGUiLCJob3VycyIsInRheFBlcmNlbnQiLCJpbmNvbWUiLCJ0eXBlcyIsImdldEFsbEluY29tZXMiLCJnZXRBbGxUeXBlcyIsImdldFR5cGUiLCJub3JtYWxpemVJbmNvbWVzIiwiYW5ndWxhciIsImlzQXJyYXkiLCJub3JtYWxpemVkSW5jb21lcyIsImZvckVhY2giLCJub3JtSW5jb21lIiwiZ3Jvc3MiLCJ0YXgiLCJuZXQiLCJiaXdlZWtseSIsImdldEhvdXJzIiwiZ2V0QWRqdXN0ZWRQYXlyYXRlIiwiaW5jb21lU2VydmljZSIsImFsbEluY29tZXMiLCJzZWxmIiwiYWxsVHlwZXMiLCJtb2R1bGUiLCJjb250cm9sbGVyIiwiJHNjb3BlIiwid2VsY29tZU1lc3NhZ2UiLCJmaWx0ZXIiLCJkYXRhIiwicHJvcGVydHlOYW1lIiwiaXNTdHJpbmciLCJyZXN1bHRzIiwia2V5cyIsImkiLCJ2YWwiLCJpc1VuZGVmaW5lZCIsImNvbnN0YW50IiwiaXRlbXMiLCJuZXdJdGVtIiwiYWRkSXRlbSIsImFtb3VudCIsImJ1ZGdldElkIiwiaXRlbSIsInRvdGFsIiwic2VydmljZSJdLCJtYXBwaW5ncyI6IkFBQUEsUUFBQUEsZUFBQUMsRUFBQUMsR0FDQSxHQUFBQyxNQUdBQyxFQUFBLFdBQ0EsTUFBQSxJQUFBRCxFQUFBRSxPQUNBSixFQUFBSyxLQUFBSCxHQUVBRCxFQUFBRSxnQkFDQUcsS0FBQSxTQUFBQyxHQUVBLE1BREFMLEdBQUFLLEtBS0FDLEVBQUEsU0FBQUMsR0FDQVIsRUFBQU8sV0FBQUMsR0FDQUgsS0FBQSxTQUFBSSxHQUNBUixFQUFBUyxLQUFBRCxJQUNBLFNBQUFFLEdBQ0FDLFFBQUFDLElBQUFGLEtBSUFHLE1BQUFaLGNBQUFBLEVBQ0FZLEtBQUFQLFdBQUFBLEVDekJBLFFBQUFQLGdCQUFBZSxFQUFBaEIsRUFBQWlCLEdBRUEsR0FBQWYsR0FBQSxXQUNBLEdBQUFnQixHQUFBbEIsRUFBQW1CLE9BU0EsT0FQQUgsR0FBQUksSUFBQUgsRUFBQSxZQUNBSSxRQUFBLFNBQUFuQixHQUNBZ0IsRUFBQUksUUFBQXBCLEtBQ0FxQixNQUFBLFNBQUFYLEdBQ0FNLEVBQUFNLE9BQUFaLEtBR0FNLEVBQUFPLFNBR0FqQixFQUFBLFNBQUFDLEdBQ0EsR0FBQVMsR0FBQWxCLEVBQUFtQixPQVdBLE9BVEFILEdBQUFVLEtBQUFULEVBQUEsWUFDQVUsS0FBQWxCLEVBQUFrQixLQUNBQyxpQkFBQW5CLEVBQUFvQixVQUNBUixRQUFBLFNBQUFYLEdBQ0FRLEVBQUFJLFFBQUFaLEtBQ0FhLE1BQUEsU0FBQVgsR0FDQU0sRUFBQU0sT0FBQVosS0FHQU0sRUFBQU8sU0FJ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LGlCQUFBLEtBQUEsaUJBQUF6QiIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBidWRnZXRTZXJ2aWNlKCRxLCBkZXBsb3lkU2VydmljZSkge1xyXG5cdHZhciBidWRnZXRzID0gW107XHJcblxyXG5cdC8vYnVkZ2V0c1xyXG5cdHZhciBnZXRBbGxCdWRnZXRzID0gZnVuY3Rpb24oKSB7XHJcblx0XHRpZihidWRnZXRzLmxlbmd0aCAhPSAwKXtcclxuXHRcdFx0cmV0dXJuICRxLndoZW4oYnVkZ2V0cyk7XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gZGVwbG95ZFNlcnZpY2UuZ2V0QWxsQnVkZ2V0cygpXHJcblx0XHRcdC50aGVuKGZ1bmN0aW9uKGFsbEJ1ZGdldHMpIHtcclxuXHRcdFx0XHRidWRnZXRzID0gYWxsQnVkZ2V0cztcclxuXHRcdFx0XHRyZXR1cm4gYnVkZ2V0cztcclxuXHRcdFx0fSk7XHJcblx0fTtcclxuXHJcblx0dmFyIHNhdmVCdWRnZXQgPSBmdW5jdGlvbihuZXdCdWRnZXQpIHtcclxuXHRcdGRlcGxveWRTZXJ2aWNlLnNhdmVCdWRnZXQobmV3QnVkZ2V0KVxyXG5cdFx0XHQudGhlbihmdW5jdGlvbihidWRnZXQpIHtcclxuXHRcdFx0XHRidWRnZXRzLnB1c2goYnVkZ2V0KTtcclxuXHRcdFx0fSwgZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0fSk7XHJcblx0fTtcclxuXHJcblx0dGhpcy5nZXRBbGxCdWRnZXRzID0gZ2V0QWxsQnVkZ2V0cztcclxuXHR0aGlzLnNhdmVCdWRnZXQgPSBzYXZlQnVkZ2V0O1xyXG59XHJcblxyXG5hbmd1bGFyLm1vZHVsZSgnYnVkZ2V0dGluZ0lzRnVuJylcclxuXHQuc2VydmljZSgnYnVkZ2V0U2VydmljZScsIFsnJHEnLCAnZGVwbG95ZFNlcnZpY2UnLCBidWRnZXRTZXJ2aWNlXSk7IiwiZnVuY3Rpb24gZGVwbG95ZFNlcnZpY2UoJGh0dHAsICRxLCBkZXBsb3lkKSB7XHJcblx0Ly9idWRnZXRzXHJcblx0dmFyIGJ1ZGdldHMgPSBmdW5jdGlvbigpIHtcclxuXHRcdHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XHJcblxyXG5cdFx0JGh0dHAuZ2V0KGRlcGxveWQgKyAnL2J1ZGdldHMnKVxyXG5cdFx0XHQuc3VjY2VzcyhmdW5jdGlvbihidWRnZXRzKSB7XHJcblx0XHRcdFx0ZGVmZXJyZWQucmVzb2x2ZShidWRnZXRzKTtcclxuXHRcdFx0fSkuZXJyb3IoZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0KGVycik7XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xyXG5cdH07XHJcblxyXG5cdHZhciBzYXZlQnVkZ2V0ID0gZnVuY3Rpb24obmV3QnVkZ2V0KSB7XHJcblx0XHR2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xyXG5cclxuXHRcdCRodHRwLnBvc3QoZGVwbG95ZCArICcvYnVkZ2V0cycsIHtcclxuXHRcdFx0bmFtZTogbmV3QnVkZ2V0Lm5hbWUsXHJcblx0XHRcdHBlcmNlbnRBbGxvdG1lbnQ6IG5ld0J1ZGdldC5wZXJjZW50XHJcblx0XHR9KS5zdWNjZXNzKGZ1bmN0aW9uKGJ1ZGdldCkge1xyXG5cdFx0XHRkZWZlcnJlZC5yZXNvbHZlKGJ1ZGdldCk7XHJcblx0XHR9KS5lcnJvcihmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0ZGVmZXJyZWQucmVqZWN0KGVycik7XHJcblx0XHR9KTtcclxuXHJcblx0XHRyZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcclxuXHR9O1xyXG5cclxuXHQvL2luY29tZXNcclxuXHR2YXIgaW5jb21lcyA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0dmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcclxuXHJcblx0XHQkaHR0cC5nZXQoZGVwbG95ZCArICcvaW5jb21lLXNvdXJjZXMnKVxyXG5cdFx0XHQuc3VjY2VzcyhmdW5jdGlvbihpbmNvbWVzKSB7XHJcblx0XHRcdFx0ZGVmZXJyZWQucmVzb2x2ZShpbmNvbWVzKTtcclxuXHRcdFx0fSkuZXJyb3IoZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0KGVycik7XHJcblx0XHRcdH0pO1xyXG5cclxuXHRcdHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xyXG5cdH07XHJcblxyXG5cdHZhciBzYXZlSW5jb21lID0gZnVuY3Rpb24obmV3SW5jb21lKSB7XHJcblx0XHR2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xyXG5cclxuXHRcdCRodHRwLnBvc3QoZGVwbG95ZCArICcvaW5jb21lLXNvdXJjZXMnLCB7XHJcblx0XHRcdGpvYjogbmV3SW5jb21lLmpvYixcclxuXHRcdFx0aW5jb21lVHlwZTogbmV3SW5jb21lLnR5cGUuaWQsXHJcblx0XHRcdHBheXJhdGU6IG5ld0luY29tZS5wYXlyYXRlLFxyXG5cdFx0XHRob3VyczogbmV3SW5jb21lLmhvdXJzLFxyXG5cdFx0XHR0YXhQZXJjZW50OiBuZXdJbmNvbWUudGF4UGVyY2VudFxyXG5cdFx0fSkuc3VjY2VzcyhmdW5jdGlvbihpbmNvbWUpIHtcclxuXHRcdFx0ZGVmZXJyZWQucmVzb2x2ZShpbmNvbWUpO1xyXG5cdFx0fSkuZXJyb3IoZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdGRlZmVycmVkLnJlamVjdChlcnIpO1xyXG5cdFx0fSk7XHJcblxyXG5cdFx0cmV0dXJuIGRlZmVycmVkLnByb21pc2U7XHJcblx0fTtcclxuXHJcblx0Ly9pbmNvbWUtdHlwZXNcclxuXHR2YXIgdHlwZXMgPSBmdW5jdGlvbigpIHtcclxuXHRcdHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XHJcblxyXG5cdFx0JGh0dHAuZ2V0KGRlcGxveWQgKyAnL2luY29tZS10eXBlcycpXHJcblx0XHRcdC5zdWNjZXNzKGZ1bmN0aW9uKHR5cGVzKSB7XHJcblx0XHRcdFx0ZGVmZXJyZWQucmVzb2x2ZSh0eXBlcyk7XHJcblx0XHRcdH0pLmVycm9yKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdGRlZmVycmVkLnJlamVjdChlcnIpO1xyXG5cdFx0XHR9KTtcclxuXHJcblx0XHRyZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcclxuXHR9XHJcblxyXG5cdHZhciB0eXBlID0gZnVuY3Rpb24oaWQpIHtcclxuXHRcdHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XHJcblxyXG5cdFx0JGh0dHAuZ2V0KGRlcGxveWQgKyAnL2luY29tZS10eXBlcz9pZD0nICsgaWQpXHJcblx0XHRcdC5zdWNjZXNzKGZ1bmN0aW9uKHR5cGUpIHtcclxuXHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlKHR5cGUpO1xyXG5cdFx0XHR9KS5lcnJvcihmdW5jdGlvbihlcnIpIHtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cdFx0XHR9KTtcclxuXHJcblx0XHRcdHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xyXG5cdH07XHJcblxyXG5cdHRoaXMuZ2V0QWxsQnVkZ2V0cyA9IGJ1ZGdldHM7XHJcblx0dGhpcy5zYXZlQnVkZ2V0ID0gc2F2ZUJ1ZGdldDtcclxuXHRcclxuXHR0aGlzLmdldEFsbEluY29tZXMgPSBpbmNvbWVzO1xyXG5cdHRoaXMuc2F2ZUluY29tZSA9IHNhdmVJbmNvbWU7XHJcblxyXG5cdHRoaXMuZ2V0QWxsVHlwZXMgPSB0eXBlcztcclxuXHR0aGlzLmdldFR5cGUgPSB0eXBlO1xyXG59XHJcblxyXG5hbmd1bGFyLm1vZHVsZSgnYnVkZ2V0dGluZ0lzRnVuJylcclxuXHQuY29uc3RhbnQoJ2RlcGxveWQnLCAnaHR0cDovL2xvY2FsaG9zdDoyNDAzJylcclxuXHQuc2VydmljZSgnZGVwbG95ZFNlcnZpY2UnLCBbJyRodHRwJywgJyRxJywgJ2RlcGxveWQnLCBkZXBsb3lkU2VydmljZV0pOyIsIi8vbm9ybWFsaXplIGluY29tZSBmbGVzaGluZyBvdXQgZ3Jvc3MgYW5kIG5ldCBudW1iZXJzXHJcbmZ1bmN0aW9uIG5vcm1hbGl6ZUluY29tZXMoaW5jb21lcykge1xyXG5cdGlmKCFhbmd1bGFyLmlzQXJyYXkoaW5jb21lcykpXHJcblx0XHRpbmNvbWVzID0gW2luY29tZXNdO1xyXG5cclxuXHR2YXIgbm9ybWFsaXplZEluY29tZXMgPSBbXTtcclxuXHJcblx0YW5ndWxhci5mb3JFYWNoKGluY29tZXMsIGZ1bmN0aW9uKGluY29tZSkge1xyXG5cdFx0dmFyIG5vcm1JbmNvbWUgPSB7fTtcclxuXHJcblx0XHRub3JtSW5jb21lLmpvYiA9IGluY29tZS5qb2I7XHJcblx0XHRub3JtSW5jb21lLnBheXJhdGUgPSBpbmNvbWUucGF5cmF0ZTtcclxuXHRcdG5vcm1JbmNvbWUuaG91cnMgPSBpbmNvbWUuaG91cnM7XHJcblx0XHRub3JtSW5jb21lLmdyb3NzID0gaW5jb21lLnBheXJhdGUgKiBpbmNvbWUuaG91cnMgKiA0O1xyXG5cdFx0bm9ybUluY29tZS50YXggPSBpbmNvbWUudGF4UGVyY2VudDtcclxuXHRcdG5vcm1JbmNvbWUubmV0ID0gbm9ybUluY29tZS5ncm9zcyAqICgxIC0gKGluY29tZS50YXhQZXJjZW50IC8gMTAwKSk7XHJcblx0XHRub3JtSW5jb21lLmJpd2Vla2x5ID0gbm9ybUluY29tZS5uZXQgLyAyO1xyXG5cclxuXHRcdG5vcm1hbGl6ZWRJbmNvbWVzLnB1c2gobm9ybUluY29tZSk7XHJcblx0fSlcclxuXHJcblx0cmV0dXJuIG5vcm1hbGl6ZWRJbmNvbWVzO1xyXG59XHJcblxyXG4vL3JldHVybiBob3VycyBiYXNlZCBvbiBpbmNvbWUgdHlwZVxyXG5mdW5jdGlvbiBnZXRIb3Vycyh0eXBlKSB7XHJcblx0c3dpdGNoKHR5cGUpe1xyXG5cdFx0Y2FzZSAnV2Vla2x5JzpcclxuXHRcdGNhc2UgJ0JpLVdlZWtseSc6XHJcblx0XHRjYXNlICdZZWFybHknOlxyXG5cdFx0XHRyZXR1cm4gNDA7XHJcblx0XHRjYXNlICdTZW1pLU1vbnRobHknOlxyXG5cdFx0Y2FzZSAnTW9udGhseSc6XHJcblx0XHRcdHJldHVybiAoNDAqMTMvMTIpOyAvLzEzIHdlZWsgbW9udGhzIGluIDEyIG1vbnRocyBiYXNlZCBvbiA1MiB3ZWVrcy95ZWFyXHJcblx0fVxyXG59XHJcblxyXG4vL3JldHVybnMgcGF5cmF0ZSBhZGp1c3RlZCB0byA0MCBob3VyL3dlZWsgcmF0ZVxyXG5mdW5jdGlvbiBnZXRBZGp1c3RlZFBheXJhdGUocGF5cmF0ZSwgdHlwZSl7XHJcblx0c3dpdGNoKHR5cGUpe1xyXG5cdFx0Y2FzZSAnV2Vla2x5JzpcclxuXHRcdFx0cmV0dXJuIHBheXJhdGU7IC8vZG8gbm90aGluZyBwYXlyYXRlIGlzIHdoYXQgaXQgaXNcclxuXHRcdGNhc2UgJ0JpLVdlZWtseSc6XHJcblx0XHRcdHJldHVybiBwYXlyYXRlIC8gODA7IC8vODAgaG91cnMgaW4gMiB3ZWVrc1xyXG5cdFx0Y2FzZSAnU2VtaS1Nb250aGx5JzpcclxuXHRcdFx0cmV0dXJuIHBheXJhdGUgLyAoNDAqMTMvNik7IC8vODYuNjY2NiBob3VycyBpbiBhIHNlbWktbW9udGhcclxuXHRcdGNhc2UgJ01vbnRobHknOlxyXG5cdFx0XHRyZXR1cm4gcGF5cmF0ZSAvICg0MCoxMy8zKTsgLy8xNzMuMzMzMyBob3VycyBpbiBhIG1vbnRoXHJcblx0XHRjYXNlICdZZWFybHknOlxyXG5cdFx0XHRyZXR1cm4gcGF5cmF0ZSAvIDIwODA7IC8vLzIwODAgaG91cnMgaW4gYSB5ZWFyXHJcblx0fVxyXG59XHJcblxyXG4vL2luY29tZSBzZXJ2aWNlIHByb3ZpZGVzIG1ldGhvZHMgdG8gYWRkIGFuZCBnZXQgaW5jb21lc1xyXG5mdW5jdGlvbiBpbmNvbWVTZXJ2aWNlKCRxLCBkZXBsb3lkU2VydmljZSkge1xyXG5cdHZhciBpbmNvbWVzID0gW107XHJcblx0dmFyIHR5cGVzID0gW107XHJcblxyXG5cdC8vaW5jb21lc1xyXG5cdHZhciBnZXRBbGxJbmNvbWVzID0gZnVuY3Rpb24oKSB7XHJcblx0XHRpZihpbmNvbWVzLmxlbmd0aCAhPSAwKXtcclxuXHRcdFx0cmV0dXJuICRxLndoZW4oaW5jb21lcyk7XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gZGVwbG95ZFNlcnZpY2UuZ2V0QWxsSW5jb21lcygpXHJcblx0XHRcdC50aGVuKGZ1bmN0aW9uKGFsbEluY29tZXMpIHtcclxuXHRcdFx0XHRpbmNvbWVzID0gbm9ybWFsaXplSW5jb21lcyhhbGxJbmNvbWVzKTtcclxuXHRcdFx0XHRyZXR1cm4gaW5jb21lcztcclxuXHRcdFx0fSk7XHJcblx0fTtcclxuXHJcblx0dmFyIHNhdmVJbmNvbWUgPSBmdW5jdGlvbihuZXdJbmNvbWUpe1xyXG5cdFx0bmV3SW5jb21lLnBheXJhdGUgPSBnZXRBZGp1c3RlZFBheXJhdGUobmV3SW5jb21lLnBheXJhdGUsIG5ld0luY29tZS50eXBlLm5hbWUpO1xyXG5cdFx0bmV3SW5jb21lLmhvdXJzID0gKCFuZXdJbmNvbWUuaG91cnMpID8gZ2V0SG91cnMobmV3SW5jb21lLnR5cGUubmFtZSkgOiBuZXdJbmNvbWUuaG91cnM7XHJcblxyXG5cdFx0ZGVwbG95ZFNlcnZpY2Uuc2F2ZUluY29tZShuZXdJbmNvbWUpXHJcblx0XHRcdC50aGVuKGZ1bmN0aW9uKGluY29tZSkge1xyXG5cdFx0XHRcdGluY29tZXMucHVzaChzZWxmLm5vcm1hbGl6ZUluY29tZXMobmV3SW5jb21lKVswXSk7XHJcblx0XHRcdH0sIGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGVycilcclxuXHRcdFx0fSk7XHJcblx0fTtcclxuXHJcblx0Ly90eXBlc1xyXG5cdHZhciBnZXRBbGxUeXBlcyA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0aWYodHlwZXMgIT0gMCl7XHJcblx0XHRcdHJldHVybiAkcS53aGVuKHR5cGVzKTtcclxuXHRcdH1cclxuXHRcdHJldHVybiBkZXBsb3lkU2VydmljZS5nZXRBbGxUeXBlcygpXHJcblx0XHRcdC50aGVuKGZ1bmN0aW9uKGFsbFR5cGVzKSB7XHJcblx0XHRcdFx0dHlwZXMgPSBhbGxUeXBlcztcclxuXHRcdFx0XHRyZXR1cm4gdHlwZXM7XHJcblx0XHRcdH0pO1xyXG5cdH07XHJcblxyXG5cdHZhciBnZXRUeXBlID0gZnVuY3Rpb24oaWQpIHtcclxuXHRcdHJldHVybiBkZXBsb3lkU2VydmljZS5nZXRUeXBlKGlkKVxyXG5cdFx0XHQudGhlbihmdW5jdGlvbih0eXBlKSB7XHJcblx0XHRcdFx0cmV0dXJuIHR5cGU7XHJcblx0XHRcdH0pO1xyXG5cdH07XHJcblxyXG5cdHRoaXMuZ2V0QWxsSW5jb21lcyA9IGdldEFsbEluY29tZXM7XHJcblx0dGhpcy5zYXZlSW5jb21lID0gc2F2ZUluY29tZTtcclxuXHJcblx0dGhpcy5nZXRBbGxUeXBlcyA9IGdldEFsbFR5cGVzO1xyXG5cdHRoaXMuZ2V0VHlwZSA9IGdldFR5cGU7XHJcbn1cclxuXHJcbmFuZ3VsYXIubW9kdWxlKCdidWRnZXR0aW5nSXNGdW4nKVxyXG5cdC5zZXJ2aWNlKCdpbmNvbWVTZXJ2aWNlJywgWyckcScsICdkZXBsb3lkU2VydmljZScsIGluY29tZVNlcnZpY2VdKTsiLCJhbmd1bGFyLm1vZHVsZSgnYnVkZ2V0dGluZ0lzRnVuJywgWydhbmd1bGFyLmZpbHRlciddKVxyXG5cdC5jb250cm9sbGVyKCdCYXNlQ29udHJvbGxlcicsIFsnJHNjb3BlJywgZnVuY3Rpb24oJHNjb3BlKSB7XHJcblx0XHQkc2NvcGUud2VsY29tZU1lc3NhZ2UgPSAnV2VsY29tZSBTYXZ5IEJ1ZGdldHRlcic7XHJcblx0fV0pOyIsImFuZ3VsYXIubW9kdWxlKFwiY3VzdG9tRmlsdGVyc1wiLCBbXSlcclxuICAgIC5maWx0ZXIoXCJ1bmlxdWVcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoZGF0YSwgcHJvcGVydHlOYW1lKSB7XHJcbiAgICAgICAgICAgIGlmIChhbmd1bGFyLmlzQXJyYXkoZGF0YSkgJiYgYW5ndWxhci5pc1N0cmluZyhwcm9wZXJ0eU5hbWUpKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcmVzdWx0cyA9IFtdO1xyXG4gICAgICAgICAgICAgICAgdmFyIGtleXMgPSB7fTtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciB2YWwgPSBkYXRhW2ldW3Byb3BlcnR5TmFtZV07XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGFuZ3VsYXIuaXNVbmRlZmluZWQoa2V5c1t2YWxdKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXlzW3ZhbF0gPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXN1bHRzLnB1c2goZGF0YVtpXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0cyk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0cztcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH0pO1xyXG4iLCJhbmd1bGFyLm1vZHVsZSgnYnVkZ2V0dGluZ0lzRnVuJylcclxuXHQuY29uc3RhbnQoJ2RlcGxveWQnLCAnaHR0cDovL2xvY2FsaG9zdDoyNDAzJylcclxuXHQuY29udHJvbGxlcignQnVkZ2V0Q29udHJvbGxlcicsIFsnJGh0dHAnLCAnZGVwbG95ZCcsICdidWRnZXRTZXJ2aWNlJywgZnVuY3Rpb24oJGh0dHAsIGRlcGxveWQsIGJ1ZGdldFNlcnZpY2UpIHtcclxuXHRcdHZhciBzZWxmID0gdGhpcztcclxuXHJcblx0XHRzZWxmLmJ1ZGdldHM7XHJcblx0XHRzZWxmLml0ZW1zID0gW107XHJcbiAgXHJcbiAgXHRcdGJ1ZGdldFNlcnZpY2UuZ2V0QWxsQnVkZ2V0cygpXHJcbiAgXHRcdFx0LnRoZW4oZnVuY3Rpb24oYnVkZ2V0cykge1xyXG4gIFx0XHRcdFx0c2VsZi5idWRnZXRzID0gYnVkZ2V0cztcclxuICBcdFx0XHR9LCBmdW5jdGlvbihlcnIpIHtcclxuICBcdFx0XHRcdGNvbnNvbGUubG9nKGVycik7XHJcbiAgXHRcdFx0fSk7XHJcblxyXG5cdFx0c2VsZi5uZXdCdWRnZXQgPSB7fTtcclxuXHJcblx0XHRzZWxmLnNhdmVCdWRnZXQgPSBmdW5jdGlvbihuZXdCdWRnZXQpIHtcclxuXHRcdFx0YnVkZ2V0U2VydmljZS5zYXZlQnVkZ2V0KG5ld0J1ZGdldCk7XHJcblx0XHRcdHNlbGYubmV3QnVkZ2V0ID0ge307XHJcblx0XHR9O1xyXG5cclxuXHRcdHNlbGYubmV3SXRlbSA9IHt9O1xyXG5cclxuXHRcdHNlbGYuYWRkSXRlbSA9IGZ1bmN0aW9uKG5ld0l0ZW0pIHtcclxuXHRcdFx0JGh0dHAucG9zdChkZXBsb3lkICsgJy9idWRnZXQtaXRlbXMnLCB7XHJcblx0XHRcdFx0bmFtZTogbmV3SXRlbS5uYW1lLFxyXG5cdFx0XHRcdGFtb3VudDogbmV3SXRlbS5hbW91bnQsXHJcblx0XHRcdFx0YnVkZ2V0SWQ6IG5ld0l0ZW0uYnVkZ2V0SWRcclxuXHRcdFx0fSkuc3VjY2VzcyhmdW5jdGlvbihpdGVtKXtcclxuXHRcdFx0XHRzZWxmLm5ld0l0ZW0gPSB7fTtcclxuXHRcdFx0XHRzZWxmLml0ZW1zLnB1c2goaXRlbSk7XHJcblx0XHRcdH0pLmVycm9yKGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGVycik7XHJcblx0XHRcdH0pO1xyXG5cdFx0fTtcclxuXHJcblx0XHRzZWxmLnRvdGFsID0gZnVuY3Rpb24oYnVkZ2V0SWQpIHtcclxuXHRcdFx0dmFyIHRvdGFsID0gMDtcclxuXHRcdFx0YW5ndWxhci5mb3JFYWNoKHNlbGYuaXRlbXMsIGZ1bmN0aW9uKGl0ZW0pIHtcclxuXHRcdFx0XHRpZihpdGVtLmJ1ZGdldElkID09IGJ1ZGdldElkKVxyXG5cdFx0XHRcdFx0dG90YWwgKz0gaXRlbS5hbW91bnQ7XHJcblx0XHRcdH0pO1xyXG5cdFx0XHRyZXR1cm4gdG90YWw7XHJcblx0XHR9O1xyXG5cclxuXHRcdHZhciBnZXRCdWRnZXQgPSBmdW5jdGlvbihpZCkge1xyXG5cdFx0XHRmb3IoaSA9IDA7IGkgPCBzZWxmLmJ1ZGdldHMubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0XHRpZihzZWxmLmJ1ZGdldHNbaV0uaWQgPT0gaWQpXHJcblx0XHRcdFx0XHRyZXR1cm4gc2VsZi5idWRnZXRzW2ldO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdH1dKTsiLCJhbmd1bGFyLm1vZHVsZSgnYnVkZ2V0dGluZ0lzRnVuJylcclxuXHQuY29udHJvbGxlcignSW5jb21lQ29udHJvbGxlcicsIFsnaW5jb21lU2VydmljZScsIFxyXG5cdFx0ZnVuY3Rpb24oaW5jb21lU2VydmljZSkge1xyXG5cdFx0XHR2YXIgc2VsZiA9IHRoaXM7XHJcblxyXG5cdFx0XHRzZWxmLmluY29tZXM7XHJcblx0XHRcdHNlbGYudHlwZXM7XHJcblx0XHRcdFxyXG5cdFx0XHQvL2luaXRpYWxseSBnZXQgaW5jb21lc1xyXG5cdFx0XHRpbmNvbWVTZXJ2aWNlLmdldEFsbEluY29tZXMoKVxyXG5cdFx0XHRcdC50aGVuKGZ1bmN0aW9uKGluY29tZXMpIHtcclxuXHRcdFx0XHRcdHNlbGYuaW5jb21lcyA9IGluY29tZXM7XHJcblx0XHRcdFx0fSwgZnVuY3Rpb24oZXJyKSB7XHJcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cdFx0XHRcdH0pO1xyXG5cclxuXHJcblx0XHRcdC8vaW5pdGlhbGx5IGdldCB0eXBlc1xyXG5cdFx0XHRpbmNvbWVTZXJ2aWNlLmdldEFsbFR5cGVzKClcclxuXHRcdFx0XHQudGhlbihmdW5jdGlvbih0eXBlcykge1xyXG5cdFx0XHRcdFx0c2VsZi50eXBlcyA9IHR5cGVzO1xyXG5cdFx0XHRcdH0sIGZ1bmN0aW9uKGVycikge1xyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0XHR9KTtcclxuXHJcblx0XHRcdHNlbGYubmV3SW5jb21lO1xyXG5cclxuXHRcdFx0c2VsZi5zYXZlSW5jb21lID0gZnVuY3Rpb24obmV3SW5jb21lKSB7XHJcblx0XHRcdFx0aW5jb21lU2VydmljZS5zYXZlSW5jb21lKG5ld0luY29tZSk7XHJcblx0XHRcdFx0c2VsZi5uZXdJbmNvbWUgPSB7fTtcclxuXHRcdFx0fTtcclxuXHR9XSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
